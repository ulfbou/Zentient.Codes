name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  # ------------------
  # 1. Build & Push Docker Image
  # ------------------
  build-docker-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata (tags and labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ------------------
  # 2. Build & Test
  # ------------------
  build-and-test:
    name: Build & Test (${{ matrix.sdk-and-framework.framework }})
    runs-on: ubuntu-latest
    needs: build-docker-image
    container: ghcr.io/${{ lowercase(github.repository) }}:latest
    strategy:
      fail-fast: false
      matrix:
        sdk-and-framework:
          - sdk: 8.x
            framework: net8.0
          - sdk: 9.x
            framework: net9.0
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution
        run: |
          dotnet build ./Zentient.Codes.sln --no-restore --configuration Release

      - name: Run Tests
        run: |
          dotnet test ./Zentient.Codes.sln --no-build --configuration Release --logger trx --results-directory TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.sdk-and-framework.framework }}
          path: TestResults

      - name: Report Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Tests (${{ matrix.sdk-and-framework.framework }})
          path: "TestResults/*.trx"
          reporter: dotnet-trx
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # ------------------
  # 3. Pack
  # ------------------
  pack:
    name: Create Package
    runs-on: ubuntu-latest
    needs: build-and-test
    container: ghcr.io/${{ lowercase(github.repository) }}:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pack all projects
        run: dotnet pack ./Zentient.Codes.sln --no-restore --no-build --configuration Release -o out

      - name: Upload NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: out/*.nupkg

  # ------------------
  # 4. Publish
  # ------------------
  publish:
    name: Publish to NuGet
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'release'
    container: ghcr.io/${{ lowercase(github.repository) }}:latest
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: out

      - name: Push to NuGet
        run: dotnet nuget push "out/**/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
